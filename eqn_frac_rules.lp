% Armando Diaz Tolentino <ajdt@cs.washington.edu> 
% 
% This file contains fraction rules used to solve an equation that is
% generated by eqn_generator.lp
%
% each rule's section contains both the condtions for the rule to fire,
% and the actions to perform if the rule is fired.
%
% XXX: these rules no longer check the types of  N1, C1, and C2. Types are implicit depending on nodeDeg, nodeOper, etc... predicates that hold

%================================================================================
% fracCancel: A*C/(B*C) --> A/B
%================================================================================
% 						### RULE CONDITIONS ###
% There's a div node with two mult nodes as children. The mult nodes have children that are equal
possible(action(data(Numer, Top, Denom, Bottom), fracCancel), S) 	:- 	holds(N1, field(nodeOper,div), S),
											holds(N1, field(parentOf,Denom), S),
											holds(N1, field(parentOf,Numer), S),
											Denom != Numer,
											holds(Denom, field(nodeOper,mul), S),
											holds(Numer, field(nodeOper,mul), S),
											holds(Numer, field(parentOf,Top), S),
											holds(Denom, field(parentOf,Bottom), S),
											holds(Top, field(nodeCoef,Coef), S),			% top and bottom are equal
											holds(Top, field(nodeDeg,Deg), S),
											holds(Bottom, field(nodeCoef,Coef), S),
											holds(Bottom, field(nodeDeg,Deg), S).

% 						### APPLYING THE RULE ###
% decrement number of children
shrinkSubtree(Numer, Top, S) 		:-	_selected(action(data(Numer, Top, Denom, Bottom), fracCancel), S).
shrinkSubtree(Denom, Bottom, S) 	:-	_selected(action(data(Numer, Top, Denom, Bottom), fracCancel), S).
%================================================================================
%================================================================================
